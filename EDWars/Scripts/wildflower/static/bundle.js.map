{"version":3,"sources":["webpack:///webpack/bootstrap 583d9b5951ff0b1699a9","webpack:///external \"BABYLON\"","webpack:///./node_modules/rest/browser.js","webpack:///./node_modules/rest/client.js","webpack:///./node_modules/rest/util/normalizeHeaderName.js","webpack:///./source/game.ts","webpack:///./source/preloader/dom.ts","webpack:///./source/core/assetsmanager.ts","webpack:///./node_modules/rest/client/default.js","webpack:///./node_modules/rest/client/xhr.js","webpack:///./node_modules/rest/util/responsePromise.js","webpack:///./source/core/statisticshandler.ts","webpack:///./source/core/interface.ts","webpack:///./source/core/stage.ts","webpack:///./source/core/character.ts","webpack:///./source/core/commander.ts","webpack:///./source/core/userinput.ts","webpack:///./source/core/pipestream.ts","webpack:///./source/core/transportlayer.ts"],"names":[],"mappings":"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S,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,MAAM,CAAC,UAAU,CAAC;IACxB,CAAC;IAEP,oBAAC;AAAD,CAAC;AA7OY,sCAAa;;;;;;;;ACT1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,kBAAkB;AAC7B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,QAAQ;AACnB,aAAa,0BAA0B;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnHA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,gBAAgB;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,2CAA2C,gBAAgB;AAC3D,cAAc;;AAEd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,+CAA+C;AAC1D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE;AACF,CAAC;;;;;;;;ACtKD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uBAAuB,gBAAgB,EAAE;AAC/D;AACA;AACA,UAAU,wBAAwB,yBAAyB,EAAE;AAC7D;AACA,UAAU,sCAAsC,yBAAyB,EAAE;AAC3E;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC,GAAG;A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","file":"static/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 583d9b5951ff0b1699a9","module.exports = BABYLON;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"BABYLON\"\n// module id = 0\n// module chunks = 0","/*\n * Copyright 2014-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar rest = require('./client/default'),\n    browser = require('./client/xhr');\n\nrest.setPlatformDefaultClient(browser);\n\nmodule.exports = rest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rest/browser.js\n// module id = 1\n// module chunks = 0","/*\n * Copyright 2014-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\n/**\n * Add common helper methods to a client impl\n *\n * @param {function} impl the client implementation\n * @param {Client} [target] target of this client, used when wrapping other clients\n * @returns {Client} the client impl with additional methods\n */\nmodule.exports = function client(impl, target) {\n\n\tif (target) {\n\n\t\t/**\n\t\t * @returns {Client} the target client\n\t\t */\n\t\timpl.skip = function skip() {\n\t\t\treturn target;\n\t\t};\n\n\t}\n\n\t/**\n\t * Allow a client to easily be wrapped by an interceptor\n\t *\n\t * @param {Interceptor} interceptor the interceptor to wrap this client with\n\t * @param [config] configuration for the interceptor\n\t * @returns {Client} the newly wrapped client\n\t */\n\timpl.wrap = function wrap(interceptor, config) {\n\t\treturn interceptor(impl, config);\n\t};\n\n\t/**\n\t * @deprecated\n\t */\n\timpl.chain = function chain() {\n\t\tif (typeof console !== 'undefined') {\n\t\t\tconsole.log('rest.js: client.chain() is deprecated, use client.wrap() instead');\n\t\t}\n\n\t\treturn impl.wrap.apply(this, arguments);\n\t};\n\n\treturn impl;\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rest/client.js\n// module id = 2\n// module chunks = 0","/*\n * Copyright 2012-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\n/**\n * Normalize HTTP header names using the pseudo camel case.\n *\n * For example:\n *   content-type         -> Content-Type\n *   accepts              -> Accepts\n *   x-custom-header-name -> X-Custom-Header-Name\n *\n * @param {string} name the raw header name\n * @return {string} the normalized header name\n */\nfunction normalizeHeaderName(name) {\n\treturn name.toLowerCase()\n\t\t.split('-')\n\t\t.map(function (chunk) { return chunk.charAt(0).toUpperCase() + chunk.slice(1); })\n\t\t.join('-');\n}\n\nmodule.exports = normalizeHeaderName;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rest/util/normalizeHeaderName.js\n// module id = 3\n// module chunks = 0","import * as BABYLON from 'babylonjs';\r\nimport { DomHandler } from './preloader/dom';\r\nimport { AssetsManager } from './core/assetsmanager';\r\nimport { StatisticsHandler } from './core/statisticshandler';\r\nimport { Interface } from './core/interface';\r\nimport { Stage } from './core/stage';\r\nimport { Input } from './core/userinput';\r\nimport { PipeStream } from './core/pipestream';\r\nimport { Campaign } from './interface/assets/campaign';\r\nimport { TransportLayer } from './core/transportlayer';\r\nimport { UrlManifest } from './interface/urlmanifest';\r\n\r\n/**\r\n * @classdesc Ahh the trusty game class, the puppeteer pulling all the strings, the functions have been placed in the order that they are called, but essentially, this loads other classes and waits for their response before continuing onto the next function\r\n */\r\nexport class Game {\r\n      private _campaignId\r\n      private _url: string = \"/game\";\r\n      private _engine: BABYLON.Engine;\r\n      private _statisticsHandler: StatisticsHandler;\r\n      private _debug: true;\r\n      private _stage: Stage;\r\n      private _stream: PipeStream;\r\n      private _transport: TransportLayer;\r\n\r\n      _canvas: HTMLCanvasElement;\r\n      _assetsManager: AssetsManager;\r\n      _interface: Interface;\r\n\r\n      input: Input;\r\n\r\n      /**\r\n      * Life cycle functions that can be overridden\r\n      */\r\n      public onBeforeLoad: () => any;\r\n      public onBeforeBabylonLoad: () => any;\r\n      public onBeforeAssetsLoad: () => any;\r\n      public onBeforeLoadGameData: () => any;\r\n      public onReady: () => any;\r\n\r\n      /**\r\n      * Event functions that can be overridden\r\n      */\r\n      public ifAssetsFailedToLoad: (errors: Array<string>) => any;\r\n      public ifBabylonFailedToLoad: (errors: Array<string>) => any;\r\n      public ifInterfaceFailedToLoad: (errors: Array<string>) => any;\r\n\r\n      /**\r\n       * Set up member variables\r\n       * @param campaignId {number} the campaing instance id used for loading map assets and players\r\n       * @param canvasId {string} the canvas element id string\r\n       */\r\n      constructor(campaignId: number, canvasId?: string) {\r\n            let domHandler = new DomHandler(canvasId);\r\n            this._canvas = domHandler.getCanvas();\r\n            this._interface = new Interface(this._url, campaignId);\r\n            this._campaignId = campaignId;\r\n            this._transport = new TransportLayer(campaignId, () => {console.log('success')}, () => {console.log('fail')});\r\n            this._stream = new PipeStream();\r\n            this.input = new Input(this._stream);\r\n            this._statisticsHandler = new StatisticsHandler();\r\n            this.ifAssetsFailedToLoad = () => { console.log('stub function ifAssetsFailedToLoad') }\r\n            this.ifBabylonFailedToLoad = () => { console.log('stub function ifBabylonFailedToLoad') }\r\n            this.ifInterfaceFailedToLoad = () => { console.log('stub function ifInterfaceFailedToLoad') }\r\n      }\r\n\r\n      /**\r\n       * Starts us off... calls the load function and handles the success (by calling onLoadBabylon) or error (by calling handleLoadingLifecycleError)\r\n       */\r\n      start(): void {\r\n            console.log('starting...');\r\n            this.load().then((manifest: any) => { this.onBeginLoadGameData(manifest) }).catch((reasons) => {\r\n                  console.log('Interface failed to load');\r\n                  this.handleLoadingLifecycleError(this.ifInterfaceFailedToLoad, reasons);\r\n            });\r\n      }\r\n\r\n      /**\r\n       * Promise does some pre babylon loading errands, like fetching the game instance manifest, uses the onBeforeLoad function if it is set. Returns a promise\r\n       * @return {Promise}\r\n       */\r\n      load(): Promise<boolean> {\r\n            if (this.onBeforeLoad) {\r\n                  this.onBeforeLoad();\r\n            }\r\n            console.log('loading started');\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                  this._interface.fetchManifest((response: any) => {\r\n                        resolve(response);\r\n                  }, (err) => { reject(err.error) });\r\n            });\r\n      }\r\n\r\n      onBeginLoadGameData(manifest: UrlManifest) {\r\n            console.log('loading game data');\r\n            this.onLoadGameData(manifest)\r\n                  .then((campaign: Campaign) => {\r\n                        this.onLoadBabylon(manifest, campaign);\r\n                  })\r\n                  .catch((reason) => {\r\n                        console.log(\"Game data loading failed\");\r\n                        this.handleLoadingLifecycleError(null, reason);\r\n                  });\r\n      }\r\n\r\n      onLoadGameData(manifest: UrlManifest): Promise<any> {\r\n            if (this.onBeforeLoadGameData) {\r\n                  this.onBeforeLoadGameData();\r\n            }\r\n            return this._statisticsHandler.loadCampaign(manifest, this._campaignId);\r\n      }\r\n\r\n\r\n      /**\r\n       * If the load promise was successful this function is called, does some more promisy stuff, but this time we have the url manifest from the previous promise.\r\n       * This function sets the scene for other classes that need it (now that its loaded) and attempts to set up the assets manager (a wrapper around the babylon assetsmanager class). If it succeeds it calls onBeginLoadAssets, if it fails it calls 'handleLoadingLifecycleError'\r\n       * @param manifest {UrlManifest}\r\n       */\r\n      onLoadBabylon(manifest: UrlManifest, campaign: Campaign ) {\r\n            console.log('loading babylon files');\r\n            this.loadBabylon(manifest, campaign).then(() => {\r\n                  // at this point we have the scene, so we can set up the assets manager\r\n                  this._assetsManager = new AssetsManager(manifest, this._stage.getScene(), campaign);\r\n\r\n                  // and apply the scene to other classes that need it\r\n                  this.input.setScene(this._stage.getScene());\r\n                  this.onBeginLoadAssets(manifest, campaign);\r\n            }).catch((reasons) => {\r\n                  console.log('Babylon loading failed');\r\n                  this.handleLoadingLifecycleError(this.ifAssetsFailedToLoad, reasons);\r\n            });\r\n      }\r\n\r\n      /**\r\n       * Sets up babylon in the stage class\r\n       * @see Stage\r\n       * @param manifest {UrlManifest} contains urls for loading componentsin other classes\r\n       */\r\n      loadBabylon(manifest: UrlManifest, campaign: Campaign): Promise<Array<string>> {\r\n            if (this.onBeforeBabylonLoad) {\r\n                  this.onBeforeBabylonLoad();\r\n            }\r\n\r\n            let errors = new Array<string>();\r\n            return new Promise<Array<string>>((resolve, reject) => {\r\n                  errors.concat(errors, this.setEngine());\r\n                  this._stage = new Stage(this._engine, manifest);\r\n                  errors.concat(errors, this._stage.setTheStage(this._canvas));\r\n                  if (errors.length === 0) {\r\n                        resolve(errors);\r\n                  }\r\n                  else {\r\n                        this.ifBabylonFailedToLoad(errors);\r\n                        reject(errors);\r\n                  }\r\n            });\r\n      }\r\n\r\n      /**\r\n       * Have an instance of the assets manager set up, have BABYLON set up, now its time to get assets for this game... Calls load assets, handles success (calls onBeginLoadGameData) and failure (calls handleLoadingLifecycleError)\r\n       * @param manifest {UrlManifest}\r\n       */\r\n      onBeginLoadAssets(manifest: UrlManifest, campaign: Campaign) {\r\n            console.log('loading assets');\r\n            this.loadAssets(campaign).then(() => { this.onLoaded(manifest, campaign) }).catch((reasons) => {\r\n                  console.log('Asset loading failed');\r\n                  this.handleLoadingLifecycleError(this.ifAssetsFailedToLoad, reasons);\r\n            });\r\n      };\r\n\r\n      /**\r\n       * starts the asset loading process and returns a promise (success or failure).\r\n       * calls the optional function onBeforeAssetsLoad\r\n       * @returns {promise<boolean>}\r\n       */\r\n      loadAssets(campaign: Campaign): Promise<boolean> {\r\n            if (this.onBeforeAssetsLoad) {\r\n                  this.onBeforeAssetsLoad();\r\n            }\r\n\r\n            return new Promise<boolean>((resolve, reject) => {\r\n                  if (!this._interface.manifest) {\r\n                        reject(\"No Manifest found\");\r\n                  }\r\n                  this._assetsManager.loadInstanceAssets(this._engine).then(() => { resolve() }).catch((reason) => {\r\n                        console.log(\"Assets manager failed.\")\r\n                        this.ifAssetsFailedToLoad(reason);\r\n                        reject(reason)\r\n                  });\r\n            });\r\n      }\r\n\r\n      /**\r\n       * At this point, all assets (textures, meshes, stats for physics ect) have been loaded and we can start the engine\r\n       * @todo tell server we are ready and wait for it to tell us to start the engine.\r\n       * @param callback {function}\r\n       */\r\n      onLoaded(manifest: UrlManifest, campaign: Campaign): void {\r\n            console.log('finished loading');\r\n            if (this.onReady) {\r\n                  this.onReady();\r\n            }\r\n            this._stage.pipeUserInput(this._stream);\r\n            this._stage.setThisPlayer(manifest.playerUsername, campaign);\r\n            this.input.onCharacterReady(this._stage.getCharacter())\r\n            this._engine.runRenderLoop(() => {\r\n                  this._stage.showTime();\r\n            });\r\n      }\r\n\r\n      hasBabylon(): boolean {\r\n            return (BABYLON) ? true : false;\r\n      }\r\n\r\n      /**\r\n       * Loads the babylon engine, returns an array of error messages, if there are no error messages then it was succesfull\r\n       * @returns {Array<string>}\r\n       */\r\n      setEngine(): Array<string> {\r\n            let errors = new Array<string>();\r\n\r\n            if (!this._canvas) {\r\n                  errors.push(\"No canvas element could be found to attach the engine to\")\r\n            }\r\n            this._engine = new BABYLON.Engine(this._canvas, true);\r\n            this._engine.loadingUIText = \"Loading... (assets)\";\r\n\r\n            window.addEventListener('resize', () => {\r\n                  this._engine.resize();\r\n            });\r\n\r\n            return errors;\r\n      }\r\n\r\n      handleLoadingLifecycleError(eventFn: (errors?: any) => any, errors: Array<string>) {\r\n            this._engine.loadingUIText = this.buildErrorMessage(errors);\r\n\r\n            if (errors.length === undefined) {\r\n                  errors = new Array<string>();\r\n                  errors.push(<any>errors);\r\n            }\r\n\r\n            if (eventFn) {\r\n                  eventFn(errors);\r\n            } else {\r\n                  throw new Error(\"failed to load\");\r\n            }\r\n      }\r\n\r\n      /**\r\n       * builds up an error message from a list of error messages\r\n       * @param errors {Array<string>}\r\n       * @returns {string}\r\n       */\r\n      buildErrorMessage(errors: any): string {\r\n            let message = \"Landing Aborted\";\r\n            throw new Error(errors);\r\n      }\r\n}\r\n\r\nwindow['Game'] = Game;\n\n\n// WEBPACK FOOTER //\n// ./source/game.ts","export class DomHandler {\r\n      defaultElementId: string = 'gui';\r\n      element: HTMLCanvasElement;\r\n      constructor(id?: string) {\r\n            let elementId = (id) ? id : this.defaultElementId\r\n            this.element = <HTMLCanvasElement>document.getElementById(elementId);\r\n      }\r\n\r\n      getCanvas(): HTMLCanvasElement {\r\n            return this.element;\r\n      }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./source/preloader/dom.ts","import * as BABYLON from 'babylonjs';\r\nimport * as WebRequest from 'rest';\r\nimport { UrlManifest, CharacterManifest} from '../interface/urlmanifest';\r\nimport {ICharacterData} from '../interface/assets/characterdata';\r\nimport { IPhysics } from '../interface/physics';\r\nimport {ICommander} from '../interface/assets/commander';\r\nimport { Campaign } from '../interface/assets/campaign';\r\nimport { Team } from '../interface/assets/team';\r\n\r\nexport class AssetsManager {\r\n      private _assets: BABYLON.AssetsManager;\r\n      private _manifest: UrlManifest;\r\n      private _scene: BABYLON.Scene;\r\n      private _campaign: Campaign;\r\n      private _loadedAvatarStatistics: Array<ICharacterData>;\r\n      loadingText: string;\r\n\r\n      constructor(manifest: UrlManifest, scene: BABYLON.Scene, campaign: Campaign) {\r\n            this._manifest = manifest;\r\n            this._scene = scene;\r\n            this._campaign = campaign;\r\n      }\r\n\r\n      /**\r\n       * Loads all instance assets for the game\r\n       * @param loadingText {string} the text shown while the game is loading.\r\n       * @returns {Promise}\r\n       */\r\n      loadInstanceAssets(engine: BABYLON.Engine): Promise<any> {\r\n\r\n            return new Promise<Array<string>>((resolve, reject) => {\r\n                  this._assets = new BABYLON.AssetsManager(this._scene);\r\n\r\n                  let numberOfAssets = this.countAllAssets(this._manifest);\r\n\r\n                  engine.loadingUIText = \"Distance to touchdown \" + numberOfAssets + \"000km\";\r\n\r\n                  this.getMapAssets(this._scene, this._manifest, reject);\r\n                  this.getAvatarStatistics(this._scene, this._manifest).then((characterData: Array<ICharacterData>) => {\r\n                        this._loadedAvatarStatistics = characterData;\r\n                        this._assets.load();\r\n                  }).catch(() => {\r\n                        throw new Error('Failed to load Players');\r\n                  });\r\n\r\n                  this._assets.onFinish = (tasks: Array<BABYLON.IAssetTask>) => {\r\n                        console.log('tasks finished');\r\n                        engine.loadingUIText = \"Activating landing gears\";\r\n                        resolve();\r\n                  };\r\n\r\n                  this._assets.onTaskError = (task: BABYLON.IAssetTask) => {\r\n                        console.log('task loading failure');\r\n                        engine.loadingUIText = \"Landing aborted\";\r\n                  }\r\n\r\n                  this._assets.onTaskSuccess = (task: BABYLON.IAssetTask) => {\r\n                        numberOfAssets = (numberOfAssets - 1);\r\n                        engine.loadingUIText = \"Distance to touchdown \" + numberOfAssets + \"000km\";\r\n                  };\r\n            });\r\n      }\r\n\r\n      countAllAssets(manifest: UrlManifest): number {\r\n            return 3;\r\n      }\r\n\r\n      getAvatarStatistics(scene: BABYLON.Scene, manifest: UrlManifest): Promise<Array<ICharacterData>> {\r\n            let url = manifest.baseUrl + \"/characters\";\r\n            let loadedCharacters = Array<ICharacterData>();\r\n\r\n            let loadCharacter = (player: any, startingVector: BABYLON.Vector3, response: WebRequest.Response) => {\r\n                  let characterManifest  = <ICharacterData>JSON.parse(response.entity);\r\n                  this.loadCharacter(url, player.commander, characterManifest, startingVector);\r\n                  loadedCharacters.push(characterManifest);\r\n\r\n                  // when all characters have been loaded into the assets manager, resolve the promise\r\n                  if (loadedCharacters.length === this._campaign.redTeam.players.length + this._campaign.blueTeam.players.length) {\r\n                        return true;\r\n                  }\r\n            }\r\n\r\n            return new Promise<Array<ICharacterData>>((resolve, reject) => {\r\n                  // load red team avatars\r\n                  this._campaign.redTeam.players.forEach((redPlayer) => {\r\n                        WebRequest(url + redPlayer.commander.assetsUrl + \"/manifest\").then((response: WebRequest.Response) => {\r\n                              let spaceMaker = (6 * loadCharacter.length);\r\n                              let redStartingVector = new BABYLON.Vector3(this._campaign.map.redStartingPointX + spaceMaker, this._campaign.map.redStartingPointY, this._campaign.map.redStartingPointZ);\r\n                             if (loadCharacter(redPlayer, redStartingVector, response)) {\r\n                                   resolve(loadedCharacters);\r\n                             }\r\n                        }).catch( () => { throw new Error(\"Failed to load character manifest\") });\r\n                  });\r\n\r\n                  // load blue team avatars\r\n                  this._campaign.blueTeam.players.forEach((bluePlayer) => {\r\n                        WebRequest(url + bluePlayer.commander.assetsUrl + \"/manifest\").then((response: WebRequest.Response) => {\r\n                              let spaceMaker = (5 * loadCharacter.length);\r\n                              let blueStartingVector = new BABYLON.Vector3(this._campaign.map.blueStartingPointX + spaceMaker, this._campaign.map.blueStartingPointY, this._campaign.map.blueStartingPointZ);\r\n                              if (loadCharacter(bluePlayer, blueStartingVector, response)) {\r\n                                   resolve(loadedCharacters);\r\n                             }\r\n                        }).catch( () => { throw new Error(\"Failed to load character manifest\") });\r\n                  });\r\n            });\r\n      }\r\n\r\n      loadCharacter(url: string, commander: ICommander, manifest: ICharacterData, startingVector: BABYLON.Vector3) {\r\n            let bodyTextureUrl = url + commander.assetsUrl + \"/textures/\" + manifest.textureUrl;\r\n            let meshUrl = url + commander.assetsUrl + manifest.meshUrl;\r\n            let meshTask = this._assets.addMeshTask(\"skull task\", \"\", meshUrl, \"buggy.babylon\");\r\n            meshTask.onSuccess = function (task: any) {\r\n                  // http://www.html5gamedevs.com/topic/6732-question-about-mesh-impostor/\r\n                  let mesh = BABYLON.Mesh.MergeMeshes(task.loadedMeshes)\r\n                  mesh.position = BABYLON.Vector3.Zero();\r\n                  mesh.name = commander.name + \"_mesh\";\r\n                  mesh.showBoundingBox = true;\r\n                  mesh.position = startingVector;\r\n                  mesh.edgesWidth = 20;\r\n                  mesh.outlineWidth = 20;\r\n                  mesh.physicsImpostor = new BABYLON.PhysicsImpostor(mesh, BABYLON.PhysicsImpostor.BoxImpostor, {\r\n                        mass: commander.physics.mass,\r\n                        restitution: commander.physics.restitution,\r\n                        friction: commander.physics.friction\r\n                  }, this._scene);\r\n                  commander.mesh = mesh;\r\n            }\r\n      }\r\n\r\n      setTerrain(url: string, scene: BABYLON.Scene, manifest: UrlManifest, reject: any): void {\r\n             let map = this._campaign.map\r\n            let ground = BABYLON.Mesh.CreateGroundFromHeightMap(\"ground\", url + \"/heightmap\" + manifest.map.heightMap, map.width, map.height, map.subDivisions, 0, 12, scene, true);\r\n\r\n            /** Load ground texture */\r\n            this.loadTexture(\"ground\", url + \"/texture\" + manifest.map.texture, (asset) => {\r\n                  let groundMaterial = new BABYLON.StandardMaterial(\"ground\", scene);\r\n                  groundMaterial.diffuseTexture = asset.texture;\r\n                  groundMaterial.specularColor = new BABYLON.Color3(0, 0, 0);\r\n                  ground.material = groundMaterial;\r\n                  ground.physicsImpostor = new BABYLON.PhysicsImpostor(ground, BABYLON.PhysicsImpostor.HeightmapImpostor,  { mass: map.physics.mass, restitution: map.physics.restitution, friction: map.physics.friction }, scene);\r\n                  this._campaign.map.groundMesh = ground;\r\n            }, () => { reject([\"Failed to load map texture\"]) });\r\n      }\r\n\r\n      setFlatTerrain(url: string, scene: BABYLON.Scene, manifest: UrlManifest, reject: any): void {\r\n            let map = this._campaign.map\r\n            let ground = BABYLON.Mesh.CreateGround(\"ground\", map.width, map.height, map.subDivisions, scene, true);\r\n            ground.position.y = 1;\r\n            /** Load ground texture */\r\n            this.loadTexture(\"ground\", url + \"/texture\" + manifest.map.texture, (asset) => {\r\n                  let groundMaterial = new BABYLON.StandardMaterial(\"ground\", scene);\r\n                  groundMaterial.diffuseTexture = asset.texture;\r\n                  groundMaterial.specularColor = new BABYLON.Color3(0, 0, 0);\r\n                  ground.material = groundMaterial;\r\n                  ground.physicsImpostor = new BABYLON.PhysicsImpostor(ground, BABYLON.PhysicsImpostor.HeightmapImpostor, { mass: map.physics.mass, restitution: map.physics.restitution, friction: map.physics.friction }, scene);\r\n                  this._campaign.map.groundMesh = ground;\r\n            }, () => { reject([\"Failed to load map texture\"]) });\r\n      }\r\n\r\n      /**\r\n       * Sets the skybox\r\n       * @param url {string} The url used to get the material\r\n       * @param scene\r\n       * @param manifest\r\n       * @param reject\r\n       */\r\n      setSkyBox(url: string, scene: BABYLON.Scene, manifest: UrlManifest, reject: any): void {\r\n            /** Load sky box */\r\n            let skybox = BABYLON.Mesh.CreateBox(\"skyBox\", 500.0, scene);\r\n            let skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n\r\n            skyboxMaterial.backFaceCulling = false;\r\n            skyboxMaterial.disableLighting = true;\r\n\r\n            skybox.material = skyboxMaterial;\r\n\r\n            skyboxMaterial.diffuseColor = new BABYLON.Color3(0, 0, 0);\r\n            skyboxMaterial.specularColor = new BABYLON.Color3(0, 0, 0);\r\n            skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(url + \"/skybox\" + manifest.map.skyBox, scene);\r\n            skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n            skybox.renderingGroupId = 0;\r\n            this._campaign.map.skyMesh = skybox;\r\n      }\r\n\r\n      setSkyPhere(url: string, scene: BABYLON.Scene, manifest: UrlManifest, reject: any): void {\r\n            let skybox = BABYLON.Mesh.CreateSphere(\"skyBox\", 10, 2500, scene);\r\n            let skyboxMaterial = new BABYLON.StandardMaterial(\"skyBox\", scene);\r\n\r\n            skyboxMaterial.backFaceCulling = false;\r\n            skyboxMaterial.disableLighting = true;\r\n\r\n            skybox.material = skyboxMaterial;\r\n\r\n            skyboxMaterial.diffuseColor = new BABYLON.Color3(0, 0, 0);\r\n            skyboxMaterial.specularColor = new BABYLON.Color3(0, 0, 0);\r\n            skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture(url + \"/skybox\" + manifest.map.skyBox, scene);\r\n            skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;\r\n            skybox.renderingGroupId = 0;\r\n            this._campaign.map.skyMesh = skybox;\r\n      }\r\n\r\n      /**\r\n       * Get the map assets required to load the map\r\n       * @param text {string} The text used to show during game load\r\n       * @param scene {BABYLON.Scene} The scene passed in from the game class\r\n       * @param manifest {UrlManifest} The manifest of urls required to load this game\r\n       * @param errors {Array<string>} The list of errors, if any incurred in this code path.\r\n       */\r\n      getMapAssets(scene: BABYLON.Scene, manifest: UrlManifest, reject: any): void {\r\n            let url = manifest.baseUrl + \"/map\" + manifest.map.baseUrl;\r\n\r\n            this.setFlatTerrain(url, scene, manifest, reject);\r\n            this.setSkyPhere(url, scene, manifest, reject);\r\n      }\r\n\r\n      /**\r\n       * Given a set of arguments, attempts to load an image into the assets manager\r\n       * @param taskName string name of the task\r\n       * @param url string the url of where to find the image\r\n       * @param success fn\r\n       * @param fail fn\r\n       */\r\n      loadImage(taskName: string, url: string, success: () => any, fail: () => any) {\r\n            let imageLoader = this._assets.addImageTask(taskName, url);\r\n            imageLoader.onSuccess = success.bind(this);\r\n            imageLoader.onError = fail.bind(this);\r\n            return imageLoader;\r\n      }\r\n      /**\r\n      * Given a set of arguments, attempts to load a texture into the assets manage\r\n      */\r\n      loadTexture(taskName: string, url: string, success: (textureAsset: BABYLON.ITextureAssetTask) => any, fail: () => any, noMipMap?: boolean, sampling?: boolean) {\r\n            let textureLoad = this._assets.addTextureTask(taskName, url, noMipMap, sampling);\r\n            textureLoad.onSuccess = success.bind(this);\r\n            textureLoad.onError = fail.bind(this);\r\n            return textureLoad;\r\n      }\r\n\r\n      loadMesh(taskName: string, meshNames: any, rootUrl: string, success: (meshAsset: BABYLON.MeshAssetTask) => any, fail: () => any) {\r\n            console.log('loading mesh', taskName);\r\n            let meshLoader = this._assets.addMeshTask(taskName, \"\", rootUrl, meshNames);\r\n            meshLoader.onSuccess = success.bind(this);\r\n            meshLoader.onError = fail.bind(this);\r\n            return meshLoader;\r\n      }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./source/core/assetsmanager.ts","/*\n * Copyright 2014-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\n/**\n * Plain JS Object containing properties that represent an HTTP request.\n *\n * Depending on the capabilities of the underlying client, a request\n * may be cancelable. If a request may be canceled, the client will add\n * a canceled flag and cancel function to the request object. Canceling\n * the request will put the response into an error state.\n *\n * @field {string} [method='GET'] HTTP method, commonly GET, POST, PUT, DELETE or HEAD\n * @field {string|UrlBuilder} [path=''] path template with optional path variables\n * @field {Object} [params] parameters for the path template and query string\n * @field {Object} [headers] custom HTTP headers to send, in addition to the clients default headers\n * @field [entity] the HTTP entity, common for POST or PUT requests\n * @field {boolean} [canceled] true if the request has been canceled, set by the client\n * @field {Function} [cancel] cancels the request if invoked, provided by the client\n * @field {Client} [originator] the client that first handled this request, provided by the interceptor\n *\n * @class Request\n */\n\n/**\n * Plain JS Object containing properties that represent an HTTP response\n *\n * @field {Object} [request] the request object as received by the root client\n * @field {Object} [raw] the underlying request object, like XmlHttpRequest in a browser\n * @field {number} [status.code] status code of the response (i.e. 200, 404)\n * @field {string} [status.text] status phrase of the response\n * @field {Object] [headers] response headers hash of normalized name, value pairs\n * @field [entity] the response body\n *\n * @class Response\n */\n\n/**\n * HTTP client particularly suited for RESTful operations.\n *\n * @field {function} wrap wraps this client with a new interceptor returning the wrapped client\n *\n * @param {Request} the HTTP request\n * @returns {ResponsePromise<Response>} a promise the resolves to the HTTP response\n *\n * @class Client\n */\n\n /**\n  * Extended when.js Promises/A+ promise with HTTP specific helpers\n  *q\n  * @method entity promise for the HTTP entity\n  * @method status promise for the HTTP status code\n  * @method headers promise for the HTTP response headers\n  * @method header promise for a specific HTTP response header\n  *\n  * @class ResponsePromise\n  * @extends Promise\n  */\n\nvar client, target, platformDefault;\n\nclient = require('../client');\n\nif (typeof Promise !== 'function' && console && console.log) {\n\tconsole.log('An ES6 Promise implementation is required to use rest.js. See https://github.com/cujojs/when/blob/master/docs/es6-promise-shim.md for using when.js as a Promise polyfill.');\n}\n\n/**\n * Make a request with the default client\n * @param {Request} the HTTP request\n * @returns {Promise<Response>} a promise the resolves to the HTTP response\n */\nfunction defaultClient() {\n\treturn target.apply(void 0, arguments);\n}\n\n/**\n * Change the default client\n * @param {Client} client the new default client\n */\ndefaultClient.setDefaultClient = function setDefaultClient(client) {\n\ttarget = client;\n};\n\n/**\n * Obtain a direct reference to the current default client\n * @returns {Client} the default client\n */\ndefaultClient.getDefaultClient = function getDefaultClient() {\n\treturn target;\n};\n\n/**\n * Reset the default client to the platform default\n */\ndefaultClient.resetDefaultClient = function resetDefaultClient() {\n\ttarget = platformDefault;\n};\n\n/**\n * @private\n */\ndefaultClient.setPlatformDefaultClient = function setPlatformDefaultClient(client) {\n\tif (platformDefault) {\n\t\tthrow new Error('Unable to redefine platformDefaultClient');\n\t}\n\ttarget = platformDefault = client;\n};\n\nmodule.exports = client(defaultClient);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rest/client/default.js\n// module id = 7\n// module chunks = 0","/*\n * Copyright 2012-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar normalizeHeaderName, responsePromise, client, headerSplitRE;\n\nnormalizeHeaderName = require('../util/normalizeHeaderName');\nresponsePromise = require('../util/responsePromise');\nclient = require('../client');\n\n// according to the spec, the line break is '\\r\\n', but doesn't hold true in practice\nheaderSplitRE = /[\\r|\\n]+/;\n\nfunction parseHeaders(raw) {\n\t// Note: Set-Cookie will be removed by the browser\n\tvar headers = {};\n\n\tif (!raw) { return headers; }\n\n\traw.trim().split(headerSplitRE).forEach(function (header) {\n\t\tvar boundary, name, value;\n\t\tboundary = header.indexOf(':');\n\t\tname = normalizeHeaderName(header.substring(0, boundary).trim());\n\t\tvalue = header.substring(boundary + 1).trim();\n\t\tif (headers[name]) {\n\t\t\tif (Array.isArray(headers[name])) {\n\t\t\t\t// add to an existing array\n\t\t\t\theaders[name].push(value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// convert single value to array\n\t\t\t\theaders[name] = [headers[name], value];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// new, single value\n\t\t\theaders[name] = value;\n\t\t}\n\t});\n\n\treturn headers;\n}\n\nfunction safeMixin(target, source) {\n\tObject.keys(source || {}).forEach(function (prop) {\n\t\t// make sure the property already exists as\n\t\t// IE 6 will blow up if we add a new prop\n\t\tif (source.hasOwnProperty(prop) && prop in target) {\n\t\t\ttry {\n\t\t\t\ttarget[prop] = source[prop];\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\t// ignore, expected for some properties at some points in the request lifecycle\n\t\t\t}\n\t\t}\n\t});\n\n\treturn target;\n}\n\nmodule.exports = client(function xhr(request) {\n\treturn responsePromise.promise(function (resolve, reject) {\n\t\t/*jshint maxcomplexity:20 */\n\n\t\tvar client, method, url, headers, entity, headerName, response, XHR;\n\n\t\trequest = typeof request === 'string' ? { path: request } : request || {};\n\t\tresponse = { request: request };\n\n\t\tif (request.canceled) {\n\t\t\tresponse.error = 'precanceled';\n\t\t\treject(response);\n\t\t\treturn;\n\t\t}\n\n\t\tXHR = request.engine || XMLHttpRequest;\n\t\tif (!XHR) {\n\t\t\treject({ request: request, error: 'xhr-not-available' });\n\t\t\treturn;\n\t\t}\n\n\t\tentity = request.entity;\n\t\trequest.method = request.method || (entity ? 'POST' : 'GET');\n\t\tmethod = request.method;\n\t\turl = response.url = request.path || '';\n\n\t\ttry {\n\t\t\tclient = response.raw = new XHR();\n\n\t\t\t// mixin extra request properties before and after opening the request as some properties require being set at different phases of the request\n\t\t\tsafeMixin(client, request.mixin);\n\t\t\tclient.open(method, url, true);\n\t\t\tsafeMixin(client, request.mixin);\n\n\t\t\theaders = request.headers;\n\t\t\tfor (headerName in headers) {\n\t\t\t\t/*jshint forin:false */\n\t\t\t\tif (headerName === 'Content-Type' && headers[headerName] === 'multipart/form-data') {\n\t\t\t\t\t// XMLHttpRequest generates its own Content-Type header with the\n\t\t\t\t\t// appropriate multipart boundary when sending multipart/form-data.\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tclient.setRequestHeader(headerName, headers[headerName]);\n\t\t\t}\n\n\t\t\trequest.canceled = false;\n\t\t\trequest.cancel = function cancel() {\n\t\t\t\trequest.canceled = true;\n\t\t\t\tclient.abort();\n\t\t\t\treject(response);\n\t\t\t};\n\n\t\t\tclient.onreadystatechange = function (/* e */) {\n\t\t\t\tif (request.canceled) { return; }\n\t\t\t\tif (client.readyState === (XHR.DONE || 4)) {\n\t\t\t\t\tresponse.status = {\n\t\t\t\t\t\tcode: client.status,\n\t\t\t\t\t\ttext: client.statusText\n\t\t\t\t\t};\n\t\t\t\t\tresponse.headers = parseHeaders(client.getAllResponseHeaders());\n\t\t\t\t\tresponse.entity = client.responseText;\n\n\t\t\t\t\t// #125 -- Sometimes IE8-9 uses 1223 instead of 204\n\t\t\t\t\t// http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\t\t\t\t\tif (response.status.code === 1223) {\n\t\t\t\t\t\tresponse.status.code = 204;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (response.status.code > 0) {\n\t\t\t\t\t\t// check status code as readystatechange fires before error event\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// give the error callback a chance to fire before resolving\n\t\t\t\t\t\t// requests for file:// URLs do not have a status code\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tclient.onerror = function (/* e */) {\n\t\t\t\t\tresponse.error = 'loaderror';\n\t\t\t\t\treject(response);\n\t\t\t\t};\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\t// IE 6 will not support error handling\n\t\t\t}\n\n\t\t\tclient.send(entity);\n\t\t}\n\t\tcatch (e) {\n\t\t\tresponse.error = 'loaderror';\n\t\t\treject(response);\n\t\t}\n\n\t});\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rest/client/xhr.js\n// module id = 8\n// module chunks = 0","/*\n * Copyright 2014-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\n/*jshint latedef: nofunc */\n\nvar normalizeHeaderName = require('./normalizeHeaderName');\n\nfunction property(promise, name) {\n\treturn promise.then(\n\t\tfunction (value) {\n\t\t\treturn value && value[name];\n\t\t},\n\t\tfunction (value) {\n\t\t\treturn Promise.reject(value && value[name]);\n\t\t}\n\t);\n}\n\n/**\n * Obtain the response entity\n *\n * @returns {Promise} for the response entity\n */\nfunction entity() {\n\t/*jshint validthis:true */\n\treturn property(this, 'entity');\n}\n\n/**\n * Obtain the response status\n *\n * @returns {Promise} for the response status\n */\nfunction status() {\n\t/*jshint validthis:true */\n\treturn property(property(this, 'status'), 'code');\n}\n\n/**\n * Obtain the response headers map\n *\n * @returns {Promise} for the response headers map\n */\nfunction headers() {\n\t/*jshint validthis:true */\n\treturn property(this, 'headers');\n}\n\n/**\n * Obtain a specific response header\n *\n * @param {String} headerName the header to retrieve\n * @returns {Promise} for the response header's value\n */\nfunction header(headerName) {\n\t/*jshint validthis:true */\n\theaderName = normalizeHeaderName(headerName);\n\treturn property(this.headers(), headerName);\n}\n\n/**\n * Follow a related resource\n *\n * The relationship to follow may be define as a plain string, an object\n * with the rel and params, or an array containing one or more entries\n * with the previous forms.\n *\n * Examples:\n *   response.follow('next')\n *\n *   response.follow({ rel: 'next', params: { pageSize: 100 } })\n *\n *   response.follow([\n *       { rel: 'items', params: { projection: 'noImages' } },\n *       'search',\n *       { rel: 'findByGalleryIsNull', params: { projection: 'noImages' } },\n *       'items'\n *   ])\n *\n * @param {String|Object|Array} rels one, or more, relationships to follow\n * @returns ResponsePromise<Response> related resource\n */\nfunction follow(rels) {\n\t/*jshint validthis:true */\n\trels = [].concat(rels);\n\n\treturn make(rels.reduce(function (response, rel) {\n\t\treturn response.then(function (response) {\n\t\t\tif (typeof rel === 'string') {\n\t\t\t\trel = { rel: rel };\n\t\t\t}\n\t\t\tif (typeof response.entity.clientFor !== 'function') {\n\t\t\t\tthrow new Error('Hypermedia response expected');\n\t\t\t}\n\t\t\tvar client = response.entity.clientFor(rel.rel);\n\t\t\treturn client({ params: rel.params });\n\t\t});\n\t}, this));\n}\n\n/**\n * Wrap a Promise as an ResponsePromise\n *\n * @param {Promise<Response>} promise the promise for an HTTP Response\n * @returns {ResponsePromise<Response>} wrapped promise for Response with additional helper methods\n */\nfunction make(promise) {\n\tpromise.status = status;\n\tpromise.headers = headers;\n\tpromise.header = header;\n\tpromise.entity = entity;\n\tpromise.follow = follow;\n\treturn promise;\n}\n\nfunction responsePromise(obj, callback, errback) {\n\treturn make(Promise.resolve(obj).then(callback, errback));\n}\n\nresponsePromise.make = make;\nresponsePromise.reject = function (val) {\n\treturn make(Promise.reject(val));\n};\nresponsePromise.promise = function (func) {\n\treturn make(new Promise(func));\n};\n\nmodule.exports = responsePromise;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rest/util/responsePromise.js\n// module id = 9\n// module chunks = 0","import * as WebRequest from 'rest';\r\nimport {Campaign} from '../interface/assets/campaign';\r\nimport {UrlManifest} from '../interface/urlmanifest';\r\nimport { Character } from './character';\r\nexport class StatisticsHandler {\r\n      private _campaign: Campaign;\r\n\r\n      constructor() {\r\n\r\n      }\r\n\r\n      loadCampaign(manifest: UrlManifest, campaignId: number): Promise<any> {\r\n            return new Promise<any>((resolve, reject) => {\r\n                  WebRequest(manifest.baseUrl + \"/campaign/\" + campaignId).then((response: WebRequest.Response) => {\r\n                        this._campaign = <Campaign>JSON.parse(response.entity);\r\n                        resolve(this._campaign);\r\n                  }).catch(\r\n                        (reason) => {reject(reason)}\r\n                  );\r\n            });\r\n      }\r\n\r\n      playerDied(characterKilled, killedBy) {\r\n\r\n      }\r\n\r\n      /**\r\n       * If we have the campaign data, we can set the player ids to the correct characters for better referencing\r\n       * @param characters {Array<Characters>}\r\n       */\r\n      updateCommandersWithPlayerIds(characters: Array<Character>) {\r\n            characters.forEach((character) => {\r\n                  this._campaign.redTeam.players.forEach((player) => {\r\n                        if (player.commander.name === character.getCommanderName()) {\r\n                              character.setPlayerId(player.id);\r\n                        }\r\n                  });\r\n                  this._campaign.blueTeam.players.forEach((player) => {\r\n                        if (player.commander.name === character.getCommanderName()) {\r\n                              character.setPlayerId(player.id);\r\n                        }\r\n                  })\r\n            })\r\n      }\r\n }\n\n\n// WEBPACK FOOTER //\n// ./source/core/statisticshandler.ts","import * as WebRequest from 'rest';\r\nimport * as mime from 'rest/interceptor/mime';\r\nimport {UrlManifest} from '../interface/urlmanifest';\r\n\r\n/**\r\n * Handles the loading of files for the game, does not handle web sockets or real time streams\r\n */\r\nexport class Interface {\r\n      private _testSuccessURL = \"foo.com\";\r\n      private _testFailUrl = \"bar.com\";\r\n      private _testMode: boolean = false;\r\n      _handShakeUrl: string;\r\n      _manifestUrl: string;\r\n      manifest: UrlManifest;\r\n     constructor(url: string, campaignId: number, testMode?: boolean) {\r\n      this._manifestUrl = url + \"/manifest/\" + campaignId;\r\n      this._testMode = testMode;\r\n      if (this._handShakeUrl === null) {\r\n            throw new Error(\"No handshake url provided\");\r\n      }\r\n     }\r\n\r\n     /**\r\n      * check the server exists, also sets the manifest url, to get manifest data.\r\n      */\r\n     handshake(callback: (data: any) => any, errCall?: (data: any) => any): void {\r\n           this.fetch(this._handShakeUrl, (data: any) => {this.setManifestUrl(data.message); callback(data); }, (err) => {\r\n                 if (errCall) {\r\n                        errCall(err);\r\n                  } else {\r\n                        throw new Error(err);\r\n                  }\r\n            });\r\n     }\r\n\r\n     /**\r\n      * Returns a url manifest of all urls needed to load the game\r\n      * @param callback {function}\r\n      */\r\n     fetchManifest (callback: (data: UrlManifest) => any, errCall?: (data: any) => any): void {\r\n            if (!this._manifestUrl) {\r\n                  throw new Error(\"No manifest url found. Handshake with server is requried\");\r\n            }\r\n            this.fetch(this._manifestUrl, (data) => {\r\n                  this.manifest = <UrlManifest>JSON.parse(data.entity);\r\n                  callback(this.manifest);\r\n            }, (err) => {\r\n                  if (errCall) {\r\n                        errCall(err);\r\n                  }\r\n                  else {\r\n                        throw new Error(err);\r\n                  }\r\n            });\r\n      }\r\n\r\n      /**\r\n       * Function makes calls to the server and passes the response back to the appropriate callback functions\r\n       * @param url {string} The url to fetch on\r\n       * @param successCallback {function} the success callback\r\n       * @param errorCallback {function} the error callback\r\n       */\r\n     fetch(url: string, successCallback: (data: any) => any, errorCallback: (data: any) => any) {\r\n           return  WebRequest(url).then(successCallback).catch(errorCallback);\r\n     }\r\n\r\n      /**\r\n      * Using the data provided, attempts to set it to our url manifest, we can then use the manifest url whenever we like, to get a list of all the urls needed to load assets into the game\r\n      * @param data {object}\r\n      */\r\n     setManifestUrl (url: string): void {\r\n            this._manifestUrl = url;\r\n     }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./source/core/interface.ts","import * as BABYLON from 'babylonjs';\r\nimport { Character } from './character';\r\nimport { UrlManifest, WorldPhysics } from '../interface/urlmanifest';\r\nimport { Campaign } from '../interface/assets/campaign';\r\nimport {PipeStream, StreamHandlingPackage, StreamResult } from './pipestream';\r\n/**\r\n * @classdesc Handles the setting up of scenes, cameras and management of active characters in the scene.\r\n * The entry point for 'setting up' is 'setTheStage'\r\n * The entry point for starting everything up is 'showTime'\r\n */\r\nexport class Stage {\r\n      private _engine: BABYLON.Engine;\r\n      private _lighting: BABYLON.HemisphericLight;\r\n      private _scene: BABYLON.Scene;\r\n      private _camera: BABYLON.FollowCamera;\r\n      private _arcCamera: BABYLON.ArcRotateCamera;\r\n      private _freeCamera: BABYLON.FreeCamera;\r\n      private _activeCamera: any;\r\n      private _environment: BABYLON.StandardMaterial;\r\n      private _worldPhysics: WorldPhysics;\r\n      private _thisCharacter: Character; // for now this will be a mesh\r\n      characters: Array<Character>;\r\n\r\n      constructor(engine: BABYLON.Engine, manifest: UrlManifest) {\r\n            console.log('A magical stage has been created')\r\n            this._engine = engine;\r\n            this._worldPhysics = manifest.world;\r\n            this.characters = new Array<Character>();\r\n      }\r\n\r\n      /**\r\n       * Allows easy camera setting.\r\n       * @param type {string} camera type to be used\r\n       * @param canvas {HTMLCanvasElement} the canvas that the camera may like to attach to\r\n       */\r\n      useCamera(type: string, canvas: HTMLCanvasElement) {\r\n            let camera;\r\n            switch (type) {\r\n                  case \"free\":\r\n                        {\r\n                              camera = this.setDebugCamera(canvas);\r\n                              break;\r\n                        }\r\n                  case \"arc\":\r\n                        {\r\n                              camera = this._setArcCamera(canvas);\r\n                              break;\r\n                        }\r\n                  case \"follow\":\r\n                        {\r\n                              camera = this._setCamera(canvas);\r\n                              break;\r\n                        }\r\n            }\r\n            this._scene.activeCamera = camera;\r\n      }\r\n\r\n      /**\r\n       * Creates the scene, sets up the cameras and the lighting\r\n       * @param canvas {HTMLCanvasElement} required for the camera to attach controls to\r\n       */\r\n      setTheStage(canvas: HTMLCanvasElement): Array<string> {\r\n            let errors = new Array<string>();\r\n            this._setScene(errors);\r\n            this.useCamera(\"free\", canvas);\r\n            this._setLighting();\r\n            // this._setShadows();\r\n            return errors;\r\n      }\r\n\r\n      /**\r\n       * Called after everything is loaded and the server has provided back a ready call\r\n       * @param debug {boolean} determines if the debug layer should be shown\r\n       */\r\n      showTime(debug?: boolean): void {\r\n            let characterMesh = this.getCharacter().fetchMesh();\r\n            this._freeCamera.lockedTarget = characterMesh;\r\n\r\n            this._scene.registerBeforeRender(() => {\r\n                  this._updateCharacterMovements();\r\n                  let zoom = this.getCharacter().zoom;\r\n                  // update camera as player moves\r\n                  let newCamPos = new BABYLON.Vector3((characterMesh.position.x  + 50), (characterMesh.position.y + zoom + 80), (characterMesh.position.z + 60));\r\n                  this._freeCamera.position = newCamPos\r\n            });\r\n            this._scene.render();\r\n             this._scene.debugLayer.show();\r\n            if (debug) {\r\n                  this._scene.debugLayer.show();\r\n            }\r\n      }\r\n\r\n      /**\r\n       * simple getter, returns the private scene\r\n       * @returns {BABYLON.Scene}\r\n       */\r\n      getScene(): BABYLON.Scene {\r\n            return this._scene;\r\n      }\r\n\r\n      pipeUserInput(stream: PipeStream) {\r\n            let hooks: StreamHandlingPackage = {\r\n                  movePlayerSuccess: (id: string, point: BABYLON.Vector3) => {\r\n                        this.characters.forEach((character) => {\r\n                              (character.playerId === id) ? character.moveByMouse(point) : null;\r\n                        });\r\n                  },\r\n                  movePlayerFailure: () => {},\r\n                  attackPlayerSuccess: () => {},\r\n                  attackPlayerFailure: () => {}\r\n            }\r\n            stream.setStreamHandlers(hooks);\r\n      }\r\n\r\n      /**\r\n       * Sets up a free camera, attaches movement controls, note the controls prevent default even with noPreventDefault bool set to true\r\n       * @param canvas {HTMLCanvasElement} element the camera needs to attach controls to\r\n       */\r\n      setDebugCamera(canvas: HTMLCanvasElement): any {\r\n            this._freeCamera = new BABYLON.FreeCamera(\"camera1\", new BABYLON.Vector3(0, 15, -45), this._scene);\r\n\r\n            this._freeCamera.speed = 3.0;\r\n            window['camera'] = this._freeCamera;\r\n            // camera positioning\r\n            // this._freeCamera.setTarget(this._thisCharacter.fetchMesh().position);\r\n            this._freeCamera.attachControl(canvas, true);\r\n            return this._freeCamera;\r\n      }\r\n\r\n      /**\r\n       * Gets 'this client' character\r\n       * @todo should return any character based on the id passeed in... or something.\r\n       * @return {Character}\r\n       */\r\n      getCharacter(): Character {\r\n            return this._thisCharacter;\r\n      }\r\n\r\n      private _setShadows(): void {\r\n            let dl = new BABYLON.DirectionalLight(\"dir\", new BABYLON.Vector3(1, -1, -0.5), this._scene);\r\n            dl.position = new BABYLON.Vector3(0, 60, 0);\r\n            let shadow = new BABYLON.ShadowGenerator(768, dl);\r\n            shadow.useBlurVarianceShadowMap = true;\r\n      }\r\n\r\n      /**\r\n       * Called in registerBeforeRender, updates character movements\r\n       * @private\r\n       */\r\n      private _updateCharacterMovements() {\r\n            this.characters.forEach((character: Character) => {\r\n                  !(character.movementPackage.finished) ? character.updateMovement() : null;\r\n            });\r\n      };\r\n\r\n      /**\r\n       * Sets up a follow camera and attaches controls\r\n       * @param canvas {HTMLCanvasElement}\r\n       * @return {BABYLON.FollowCamera}\r\n       */\r\n      private _setCamera(canvas: HTMLCanvasElement): BABYLON.FollowCamera {\r\n\r\n            this._camera = new BABYLON.FollowCamera(\"Follow\", new BABYLON.Vector3(0, 15, 45), this._scene);\r\n            this._camera.radius = 70; // how far from the object to follow\r\n            this._camera.heightOffset = 70; // how high above the object to place the camera\r\n            this._camera.rotationOffset = 720; // the viewing angle\r\n            this._camera.cameraAcceleration = 0.7 // how fast to move\r\n            this._camera.maxCameraSpeed = 1 // speed limit\r\n\r\n            this._camera.attachControl(canvas, true);\r\n            window['camera'] = this._camera;\r\n            return this._camera;\r\n      }\r\n\r\n      /**\r\n       * Sets up an arc camera sets it on the member variable, but also returns it\r\n       * @param canvas {HTMLCanvasElement}\r\n       * @returns {BABYLON.ArcRotateCamera}\r\n       */\r\n      private _setArcCamera(canvas): BABYLON.ArcRotateCamera {\r\n            this._arcCamera = new BABYLON.ArcRotateCamera(\"ArcRotateCamera\", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), this._scene);\r\n            this._arcCamera.setPosition(new BABYLON.Vector3(0, 20, 50));\r\n            this._arcCamera.attachControl(canvas, true);\r\n            return this._arcCamera;\r\n      }\r\n\r\n      /**\r\n       * Attempts to set the scene, returns an array of error messages. if the array is empty, then it was successful\r\n       * @private\r\n       * @returns {Array<string>}\r\n       */\r\n      private _setScene(errors: Array<string>): Array<string> {\r\n            if (!this._engine) {\r\n                  errors.push(\"Failed to set scene, the engine is missing.\");\r\n            } else {\r\n                  this._scene = new BABYLON.Scene(this._engine);\r\n                  this._scene.enablePhysics(new BABYLON.Vector3(this._worldPhysics.gravityVector.x, this._worldPhysics.gravityVector.y, this._worldPhysics.gravityVector.z), new BABYLON.OimoJSPlugin());\r\n            }\r\n            return errors;\r\n      }\r\n\r\n      /**\r\n       * Sets scen lightingq\r\n       * @private\r\n       */\r\n      private _setLighting(): void {\r\n            this._lighting = new BABYLON.HemisphericLight(\"light1\", new BABYLON.Vector3(0, 1, 0), this._scene);\r\n            this._lighting.diffuse = new BABYLON.Color3(1, 1, 1);\r\n            this._lighting.specular = new BABYLON.Color3(0, 0, 0);\r\n      }\r\n\r\n      /**\r\n       * Sets the '_thisCharacter' variable and pushes it into the list of characters in the scene\r\n       */\r\n      setThisPlayer(userName: string, campaign: Campaign): void {\r\n            this._thisCharacter = new Character(userName, campaign, this._scene);\r\n            this.characters.push(this._thisCharacter);\r\n      }\r\n\r\n      /**\r\n       * Adds the character argument to the list of characters array\r\n       * @param character {Character}\r\n       */\r\n      addCharacter(character: Character) {\r\n            this.characters.push(character);\r\n      }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./source/core/stage.ts","import * as BABYLON from 'babylonjs';\r\nimport { Commander } from './commander';\r\nimport { Campaign } from '../interface/assets/campaign';\r\nimport { Player } from '../interface/assets/player';\r\n\r\n/**\r\n * Used to determine if a character still needs to move on a per frame render basis\r\n */\r\nexport interface IMovementPackage {\r\n  finished: boolean;\r\n  angleApplied: boolean;\r\n  destination: BABYLON.Vector3;\r\n}\r\n\r\nexport class Character {\r\n  private commander: Commander;\r\n  private _player: Player;\r\n\r\n  movementPackage: IMovementPackage;\r\n  playerId: string;\r\n  zoom: number = 0;\r\n\r\n  constructor(username: string, campaign: Campaign, scene: BABYLON.Scene) {\r\n    // find user in campaign\r\n    this._player = this.findUserInCampaign(username, campaign);\r\n    this.playerId = this._player.username;\r\n    // create commander\r\n    this.commander = new Commander(this._player.commander, scene);\r\n    this.movementPackage = {\r\n      finished: true,\r\n      angleApplied: false,\r\n      destination: new BABYLON.Vector3(0, 0, 0)\r\n    }\r\n  }\r\n\r\n  zoomOut(): void {\r\n    if (this.zoom < 70) {\r\n      this.zoom  += 4;\r\n    }\r\n  }\r\n\r\n  zoomIn(): void {\r\n    if (this.zoom > -10) {\r\n       this.zoom -= 4;\r\n    }\r\n  }\r\n\r\n  findUserInCampaign(username: string, campaign: Campaign): Player {\r\n    let foundPlayer: Player;\r\n    campaign.blueTeam.players.forEach((player) => {\r\n      if (player.username === username) {\r\n        foundPlayer = player;\r\n      }\r\n    });\r\n\r\n    campaign.redTeam.players.forEach((player) => {\r\n      if (player.username === username) {\r\n        foundPlayer = player;\r\n      }\r\n    });\r\n\r\n    return foundPlayer;\r\n  }\r\n\r\n  fetchMesh(): BABYLON.AbstractMesh {\r\n    return this.commander.fetchMesh();\r\n  }\r\n\r\n  setPlayerId(id: string) {\r\n    this.playerId = id;\r\n  }\r\n\r\n  getCommanderName() {\r\n    return this.commander.getName();\r\n  }\r\n\r\n  updateMovement() {\r\n    let mesh = this.commander.fetchMesh();\r\n    let myPos = mesh.getAbsolutePosition();\r\n    let hitVector = this.movementPackage.destination;\r\n    let x = 0;\r\n    let z = 0;\r\n    let y;\r\n    let tolerance = 1;\r\n    let xFinished = false;\r\n    if (hitVector.x > myPos.x + tolerance) {\r\n      x = this.commander.stats.baseSpeed;\r\n    } else if (hitVector.x < myPos.x - tolerance) {\r\n      x = -this.commander.stats.baseSpeed;\r\n    } else {\r\n      xFinished = true;\r\n    }\r\n\r\n    if (hitVector.z > myPos.z + tolerance) {\r\n      z = this.commander.stats.baseSpeed;\r\n    } else if (hitVector.z < myPos.z - tolerance) {\r\n      z = -this.commander.stats.baseSpeed;\r\n    } else {\r\n      if (xFinished === true) {\r\n        this.movementPackage.finished = true;\r\n      }\r\n    }\r\n    mesh.physicsImpostor.setLinearVelocity(new BABYLON.Vector3(x, 0, z));\r\n\r\n    if (!xFinished) {\r\n      mesh.lookAt(hitVector);\r\n    }\r\n  }\r\n\r\n  moveByMouse(hitVector: BABYLON.Vector3) {\r\n    this.movementPackage = {\r\n      finished: false,\r\n      destination: hitVector,\r\n      angleApplied: false\r\n    }\r\n  }\r\n\r\n  computeWorldMatrix(): BABYLON.Matrix {\r\n    return this.commander.fetchMesh().getWorldMatrix();\r\n  }\r\n\r\n  transformFromGlobalVectorToLocal(global: BABYLON.Matrix, newVector: BABYLON.Vector3): BABYLON.Vector3 {\r\n    return BABYLON.Vector3.TransformCoordinates(newVector, global);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./source/core/character.ts","/**\r\n * @classdesc Welcome to the commander class, this is actually the avatar, this class will hold the mesh set, dictate the speed, physics, textures\r\n * and all that jazz, the 'character' class will create an instance of this class and any 'physical' interactions will need to be piped through the character class\r\n */\r\nimport * as BABYLON from 'babylonjs';\r\n/**\r\n * Import the necessary IInterface\r\n */\r\nimport { ICommander } from '../interface/assets/commander';\r\n\r\nexport class Commander {\r\n    stats: ICommander;\r\n    private _mesh: BABYLON.AbstractMesh;\r\n    constructor(commander: ICommander, scene: BABYLON.Scene) {\r\n        this.stats = commander;\r\n        this._mesh = commander.mesh;\r\n    }\r\n\r\n    fetchMesh(): BABYLON.AbstractMesh {\r\n        return this._mesh;\r\n    }\r\n    getName(): string {\r\n        return this.stats.name;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./source/core/commander.ts","import * as BABYLON from 'babylonjs';\r\nimport { Character } from './character';\r\nimport { PipeStream } from './pipestream';\r\n\r\nexport interface KeyboardMapping {\r\n      forward: number;\r\n      back: number;\r\n      strafeLeft: number;\r\n      strafeRight: number;\r\n      jump: number;\r\n      target: number;\r\n      firstAbility: number;\r\n      secondAbility: number;\r\n      thirdAbility: number;\r\n      fourthAbility: number;\r\n      fithAbility: number\r\n}\r\n\r\nexport class Input {\r\n      private _character: Character;\r\n      private _keyboardMapping: KeyboardMapping;\r\n      private _scene: BABYLON.Scene;\r\n      private _stream: PipeStream;\r\n\r\n      /**\r\n       * TODO we really need to place a 'character' class that can just be told to move, the character class will then get the necessary data\r\n       * such as the matric\r\n       */\r\n      constructor(stream: PipeStream) {\r\n            // set to WASD\r\n            this.updateKeyboardMaps({\r\n                  forward: 87,\r\n                  back: 83,\r\n                  strafeLeft: 65,\r\n                  strafeRight: 68,\r\n                  jump: 32, // spacebar\r\n                  target: 223, // tilde\r\n                  firstAbility: 49, // 1\r\n                  secondAbility: 50, // 2\r\n                  thirdAbility: 51, // 3\r\n                  fourthAbility: 52, // 4\r\n                  fithAbility: 53 // 5\r\n            })\r\n\r\n            this._stream = stream;\r\n      }\r\n\r\n      updateKeyboardMaps(mapping: KeyboardMapping) {\r\n            this._keyboardMapping = mapping;\r\n      }\r\n\r\n      onCharacterReady(character: Character) {\r\n            this._character = character;\r\n      }\r\n\r\n      isNotReady(): boolean {\r\n            return (this._character === undefined);\r\n      }\r\n\r\n      setScene(scene: BABYLON.Scene) {\r\n            this._scene = scene;\r\n      }\r\n\r\n      onKeyboardInput(event: KeyboardEvent) {\r\n            if (this.isNotReady()) {\r\n                  return console.log('Player not ready yet...');\r\n            }\r\n\r\n            console.log('Player input logged, a request to move, for now just stub:');\r\n            if (event.keyCode === this._keyboardMapping.jump) {\r\n                  this.jump();\r\n            }\r\n      }\r\n\r\n      onMouseInput(event: MouseEvent) {\r\n            if (this._scene && !this.isNotReady()) {\r\n                  let pickResult: BABYLON.PickingInfo = this._scene.pick(this._scene.pointerX, this._scene.pointerY);\r\n                  if (pickResult.hit) {\r\n                        this._stream.movePlayerRequest(this._character.playerId, pickResult.pickedPoint);\r\n                     //  this._character.moveByMouse(pickResult.pickedPoint);\r\n                  }\r\n            }\r\n      }\r\n\r\n      onMouseScroll(event: any) {\r\n            if (event.wheelDelta / 120 > 0) {\r\n                  this._character.zoomIn();\r\n            } else {\r\n                 this._character.zoomOut();\r\n            }\r\n      }\r\n\r\n      jump() {\r\n             console.log(\"jump\");\r\n      }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./source/core/userinput.ts","import * as BABYLON from 'babylonjs';\r\n\r\nexport interface StreamResult {\r\n      success: boolean;\r\n      message: string;\r\n      response: any;\r\n}\r\n\r\nexport interface StreamHandlingPackage {\r\n      movePlayerSuccess:  (playerId: string, locationRequest: BABYLON.Vector3) => any;\r\n      movePlayerFailure: (reason: string) => any;\r\n      attackPlayerSuccess: (playerId: string, locationRequest: BABYLON.Vector3) => any;\r\n      attackPlayerFailure: (reason: string) => any;\r\n}\r\n\r\n/**\r\n * @classdesc More like pipe dream HUE HUE HUE\r\n */\r\nexport class PipeStream {\r\n      private _signalR: any;\r\n      private _ready: boolean = false;\r\n      private _movePlayerSuccess: (playerId: string, locationRequest: BABYLON.Vector3) => any;\r\n      private _movePlayerFailure: (reason: string) => any;\r\n      private _attackPlayerSuccess: (playerId: string, locationRequest: BABYLON.Vector3) => any;\r\n      private _attackPlayerFailure: (reason: string) => any;\r\n\r\n      constructor() {\r\n            // provide signal R here, it should already be connected to the server the connection process should not be handled by this class\r\n      }\r\n\r\n      setStreamHandlers (functionHooks: StreamHandlingPackage) {\r\n            this._movePlayerSuccess = functionHooks.movePlayerSuccess;\r\n            this._movePlayerFailure = functionHooks.movePlayerFailure;\r\n            this._attackPlayerSuccess = functionHooks.attackPlayerSuccess;\r\n            this._attackPlayerFailure = functionHooks.attackPlayerFailure;\r\n            this._ready = true;\r\n      }\r\n\r\n      isReady(): boolean {\r\n            return this._ready;\r\n      }\r\n\r\n      movePlayerRequest (playerId: string, locationRequest: BABYLON.Vector3) {\r\n            console.log('todo make signal r request to server');\r\n            // stub server should decide if below function is called\r\n            let streamResult: StreamResult = {\r\n                  success: true,\r\n                  message: \"yeah\",\r\n                  response: {\r\n                        playerId: playerId,\r\n                        locationRequest: locationRequest\r\n                  }\r\n            }\r\n            this.movePlayerResponse(streamResult);\r\n      }\r\n\r\n      /**\r\n       * We get this from the server.\r\n       * @param result\r\n       */\r\n      movePlayerResponse (result: StreamResult) {\r\n            if (result.success) {\r\n                  this._movePlayerSuccess(result.response.playerId, result.response.locationRequest);\r\n            } else {\r\n                  this._movePlayerFailure(result.message);\r\n            }\r\n      }\r\n\r\n      attackPlayerRequest () {\r\n\r\n      }\r\n\r\n      attackPlayerResponse () {\r\n\r\n      }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./source/core/pipestream.ts","/**\r\n * Focuses on setting up the signalR connections for this client\r\n */\r\nexport class TransportLayer {\r\n      private hubConnectionUrl: string = \"/game\";\r\n      private campaignUrl: string = '/game/campaign/';\r\n      private logging: boolean = true;\r\n      private model: any; // need to find out what the server sends back, and create an interface\r\n      private api: any;\r\n      private onComplete: any; // callback when the handshake is complete\r\n      private clientHub: any;\r\n      private campaignId: number;\r\n      // set up the ajax request\r\n      constructor(campaignId: number, getCampaignDataComplete: any, handShakeComplete: any) {\r\n            // setting up transport layer\r\n            console.log('Requesting campaign data from server, campaign:', campaignId);\r\n            this.onComplete = handShakeComplete;\r\n            this.campaignId = campaignId;\r\n            this.handshake();\r\n            this.onComplete = handShakeComplete;\r\n      }\r\n\r\n      handshake() {\r\n            this.clientHub = $.signalR.hub.createHubProxy('game');\r\n            this.clientHub.client = {\r\n                  beef: function () { debugger }\r\n            };\r\n            console.log('Handshaking....');\r\n            $.signalR.hub.logging = this.logging;\r\n            $.signalR.hub.start().done(this.handshakeSuccess.bind(this)).fail(this.handshakeError);\r\n      }\r\n\r\n      // if handshake was succesfull, provide back the api signalR interface\r\n      handshakeSuccess() {\r\n            debugger\r\n            this.clientHub.server.registerPlayer(this.campaignId);\r\n            // set up client hub functions...\r\n            // this.clientHub.client <=== should containg functions to the server\r\n            // the servers response in===> this.clientHub.server functions()\r\n\r\n      }\r\n\r\n      handshakeError() {\r\n            throw new Error(\"Failed to complete handshake with server\");\r\n      }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./source/core/transportlayer.ts"],"sourceRoot":""}